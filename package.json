{
	"name": "find-related",
	"displayName": "Find Related Files",
	"description": "Finds files related to the current file based on user-defined configuration rules",
	"version": "0.9.0",
	"author": {
		"name": "Eric Amodio",
		"email": "eamodio@gmail.com"
	},
	"publisher": "eamodio",
	"license": "SEE LICENSE IN LICENSE",
	"homepage": "https://github.com/eamodio/vscode-find-related/blob/master/README.md",
	"bugs": {
		"url": "https://github.com/eamodio/vscode-find-related/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/eamodio/vscode-find-related.git"
	},
	"engines": {
		"vscode": "^1.37.0"
	},
	"main": "./dist/extension",
	"icon": "images/icon.png",
	"preview": false,
	"badges": [
		{
			"url": "https://img.shields.io/badge/vscode--dev--community-find--related--files-blue.svg?logo=slack&labelColor=555555",
			"href": "https://vscode-slack.amod.io",
			"description": "Join us in the #find-related-files channel"
		}
	],
	"categories": [
		"Other"
	],
	"galleryBanner": {
		"color": "#56098c",
		"theme": "dark"
	},
	"keywords": [
		"find",
		"related",
		"files",
		"open",
		"similar"
	],
	"activationEvents": [
		"onCommand:findrelated.show"
	],
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Find Related Files",
			"properties": {
				"findrelated.rulesets": {
					"type": "array",
					"default": [],
					"items": {
						"type": "object",
						"required": [
							"name",
							"rules"
						],
						"properties": {
							"name": {
								"type": "string",
								"description": "Specifies the name of the ruleset"
							},
							"rules": {
								"type": "array",
								"items": {
									"type": "object",
									"required": [
										"pattern",
										"locators"
									],
									"properties": {
										"pattern": {
											"type": "string",
											"description": "Specifies a regex pattern to which this rule applies; Capture groups can be used as replacements in the `locators`"
										},
										"locators": {
											"type": "array",
											"items": {
												"type": "string",
												"uniqueItems": true
											},
											"description": "Specifies the list of glob pattern locators that will be used to search for related files; `$[0-9]` can be use as replacement tokens from the capture groups in the `pattern`"
										}
									},
									"uniqueItems": true
								},
								"description": "Specifies the rules to find related files"
							}
						}
					},
					"description": "Defines rulesets that can be used find related files; Will be merged with built-in rulesets"
				},
				"findrelated.workspaceRulesets": {
					"type": "array",
					"default": [],
					"items": {
						"type": "object",
						"required": [
							"name",
							"rules"
						],
						"properties": {
							"name": {
								"type": "string",
								"description": "Specifies the name of the ruleset"
							},
							"rules": {
								"type": "array",
								"items": {
									"type": "object",
									"required": [
										"pattern",
										"locators"
									],
									"properties": {
										"pattern": {
											"type": "string",
											"description": "Specifies a regex pattern to which this rule applies; Capture groups can be used as replacements in the `locators`"
										},
										"locators": {
											"type": "array",
											"items": {
												"type": "string",
												"uniqueItems": true
											},
											"description": "Specifies the list of glob pattern locators that will be used to search for related files; `$[0-9]` can be use as replacement tokens from the capture groups in the `pattern`"
										}
									},
									"uniqueItems": true
								},
								"description": "Specifies the rules to find related files"
							}
						}
					},
					"description": "Defines workspace-specific rulesets that can be used find related files; Will be merged with built-in rulesets"
				},
				"findrelated.applyRulesets": {
					"type": "array",
					"default": [
						"aspnet",
						"aspnet-mvc",
						"aurelia",
						"c/c++",
						"csharp",
						"minified",
						"xaml"
					],
					"items": {
						"type": "string",
						"uniqueItems": true
					},
					"description": "Specifies the rulesets to use to find related files"
				},
				"findrelated.applyWorkspaceRulesets": {
					"type": "array",
					"default": [],
					"items": {
						"type": "string",
						"uniqueItems": true
					},
					"description": "Specifies the workspace-specific rulesets to use find related files"
				},
				"findrelated.autoOpen": {
					"type": "boolean",
					"default": false,
					"description": "Specifies whether to automatically open the related file if there is only 1 result"
				},
				"findrelated.openSideBySide": {
					"type": "boolean",
					"default": false,
					"description": "Specifies whether to open the related file to the side"
				},
				"findrelated.autoPreview": {
					"type": "boolean",
					"default": true,
					"description": "Specifies whether to automatically preview related files upon selection"
				},
				"findrelated.ignoreExcludes": {
					"type": "boolean",
					"default": false,
					"description": "Specifies whether to ignore file excludes when searching for related files"
				},
				"findrelated.openPreview": {
					"type": "boolean",
					"default": true,
					"description": "Specifies whether to open the related file in a preview tab"
				},
				"findrelated.outputLevel": {
					"type": "string",
					"default": "silent",
					"enum": [
						"silent",
						"errors",
						"verbose"
					],
					"description": "Specifies how much (if any) output will be sent to the FindRelated output channel"
				}
			}
		},
		"commands": [
			{
				"command": "findrelated.show",
				"title": "Show Related Files",
				"category": "Files"
			}
		],
		"keybindings": [
			{
				"command": "findrelated.show",
				"key": "alt+r",
				"when": "editorFocus"
			},
			{
				"command": "findrelated.key.right",
				"key": "alt+right",
				"when": "findrelated:key:right"
			}
		]
	},
	"scripts": {
		"analyze:bundle": "webpack --env.analyzeBundle",
		"analyze:deps": "webpack --env.analyzeDeps",
		"build": "webpack --env.development",
		"bundle": "webpack --env.production",
		"clean": "git clean -Xdf -e !node_modules -e !node_modules/**/*",
		"lint": "eslint src/**/*.ts --fix",
		"pack": "vsce package --yarn",
		"pretty": "prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\"",
		"pub": "vsce publish --yarn",
		"rebuild": "yarn run reset && yarn run build",
		"reset": "yarn run clean && yarn --frozen-lockfile",
		"watch": "webpack --watch --env.development --info-verbosity verbose",
		"vscode:prepublish": "yarn run bundle"
	},
	"dependencies": {
		"lodash-es": "4.17.15"
	},
	"devDependencies": {
		"@types/lodash-es": "4.17.3",
		"@types/node": "10.14.18",
		"@types/vscode": "1.67.0",
		"@typescript-eslint/eslint-plugin": "2.4.0",
		"@typescript-eslint/parser": "2.4.0",
		"circular-dependency-plugin": "5.2.0",
		"clean-webpack-plugin": "3.0.0",
		"eslint": "6.5.1",
		"eslint-cli": "1.1.1",
		"eslint-config-prettier": "6.4.0",
		"eslint-plugin-import": "2.18.2",
		"fork-ts-checker-webpack-plugin": "1.5.1",
		"prettier": "1.18.2",
		"terser-webpack-plugin": "2.1.3",
		"ts-loader": "6.2.0",
		"typescript": "3.6.4",
		"vsce": "1.68.0",
		"webpack": "4.41.2",
		"webpack-bundle-analyzer": "3.6.0",
		"webpack-cli": "3.3.9"
	}
}
