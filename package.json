{
	"name": "find-related",
	"displayName": "Find Related Files",
	"description": "Finds files related to the current file based on user-defined configuration rules",
	"version": "0.9.0",
	"engines": {
		"vscode": "^1.72.0"
	},
	"license": "SEE LICENSE IN LICENSE",
	"publisher": "amodio",
	"author": {
		"name": "Eric Amodio",
		"email": "eamodio@gmail.com"
	},
	"homepage": "https://github.com/eamodio/vscode-find-related",
	"bugs": {
		"url": "https://github.com/eamodio/vscode-find-related/issues"
	},
	"repository": {
		"type": "git",
		"url": "https://github.com/eamodio/vscode-find-related.git"
	},
	"main": "./dist/find-related.js",
	"browser": "./dist/browser/find-related.js",
	"icon": "images/icon.png",
	"preview": false,
	"badges": [
		{
			"url": "https://img.shields.io/badge/vscode--dev--community-find--related--files-blue.svg?logo=slack&labelColor=555555",
			"href": "https://vscode-slack.amod.io",
			"description": "Join us in the #find-related-files channel"
		}
	],
	"categories": [
		"Other"
	],
	"galleryBanner": {
		"color": "#56098c",
		"theme": "dark"
	},
	"keywords": [
		"find",
		"related",
		"files",
		"open",
		"similar"
	],
	"activationEvents": [
		"onCommand:findrelated.show"
	],
	"capabilities": {
		"untrustedWorkspaces": {
			"supported": true
		}
	},
	"contributes": {
		"configuration": [
			{
				"id": "rules",
				"title": "Rules",
				"order": 10,
				"properties": {
					"findrelated.applyRulesets": {
						"type": "array",
						"default": [
							"aspnet",
							"aspnet-mvc",
							"aurelia",
							"c/c++",
							"csharp",
							"delphi",
							"elixir",
							"minified",
							"phoenix",
							"xaml"
						],
						"items": {
							"type": "string",
							"enum": [
								"aspnet",
								"aspnet-mvc",
								"aurelia",
								"c/c++",
								"csharp",
								"delphi",
								"elixir",
								"minified",
								"phoenix",
								"xaml"
							],
							"enumDescriptions": [
								"Applies rules for ASP.NET projects",
								"Applies rules for ASP.NET MVC projects",
								"Applies rules for Aurelia projects",
								"Applies rules for C/C++ projects",
								"Applies rules for C# projects",
								"Applies rules for Delphi projects",
								"Applies rules for Elixir projects",
								"Applies rules for minified CSS/JS files",
								"Applies rules for Phoenix framework projects",
								"Applies rules for XAML files"
							]
						},
						"uniqueItems": true,
						"markdownDescription": "Specifies the rulesets to use to find related files",
						"scope": "window",
						"order": 10
					},
					"findrelated.rulesets": {
						"type": "array",
						"default": [],
						"items": {
							"type": "object",
							"required": [
								"name",
								"rules"
							],
							"properties": {
								"name": {
									"type": "string",
									"description": "Specifies the name of the ruleset"
								},
								"rules": {
									"type": "array",
									"items": {
										"type": "object",
										"required": [
											"pattern",
											"locators"
										],
										"properties": {
											"pattern": {
												"type": "string",
												"description": "Specifies a regex pattern to which this rule applies; Capture groups can be used as replacements in the `locators`"
											},
											"locators": {
												"type": "array",
												"items": {
													"type": "string",
													"uniqueItems": true
												},
												"description": "Specifies the list of glob pattern locators that will be used to search for related files; `$[0-9]` can be use as replacement tokens from the capture groups in the `pattern`"
											}
										},
										"uniqueItems": true
									},
									"description": "Specifies the rules to find related files"
								}
							}
						},
						"markdownDescription": "Defines rulesets that can be used find related files; Will be merged with built-in rulesets",
						"scope": "window",
						"order": 11
					},
					"findrelated.applyWorkspaceRulesets": {
						"type": "array",
						"default": [],
						"items": {
							"type": "string",
							"uniqueItems": true
						},
						"markdownDescription": "Specifies the workspace-specific rulesets to use find related files",
						"scope": "window",
						"order": 20
					},
					"findrelated.workspaceRulesets": {
						"type": "array",
						"default": [],
						"items": {
							"type": "object",
							"required": [
								"name",
								"rules"
							],
							"properties": {
								"name": {
									"type": "string",
									"description": "Specifies the name of the ruleset"
								},
								"rules": {
									"type": "array",
									"items": {
										"type": "object",
										"required": [
											"pattern",
											"locators"
										],
										"properties": {
											"pattern": {
												"type": "string",
												"description": "Specifies a regex pattern to which this rule applies; Capture groups can be used as replacements in the `locators`"
											},
											"locators": {
												"type": "array",
												"items": {
													"type": "string",
													"uniqueItems": true
												},
												"description": "Specifies the list of glob pattern locators that will be used to search for related files; `$[0-9]` can be use as replacement tokens from the capture groups in the `pattern`"
											}
										},
										"uniqueItems": true
									},
									"description": "Specifies the rules to find related files"
								}
							}
						},
						"markdownDescription": "Defines workspace-specific rulesets that can be used find related files; Will be merged with built-in rulesets",
						"scope": "window",
						"order": 21
					}
				}
			},
			{
				"id": "findrelated",
				"title": "Find Related Files",
				"order": 20,
				"properties": {
					"findrelated.openPreview": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Specifies whether to open the related file in a preview tab",
						"scope": "window",
						"order": 10
					},
					"findrelated.openSideBySide": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Specifies whether to open the related file to the side",
						"scope": "window",
						"order": 11
					},
					"findrelated.autoPreview": {
						"type": "boolean",
						"default": true,
						"markdownDescription": "Specifies whether to automatically preview related files upon selection",
						"scope": "window",
						"order": 20
					},
					"findrelated.autoOpen": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Specifies whether to automatically open the related file if there is only 1 result",
						"scope": "window",
						"order": 21
					},
					"findrelated.ignoreExcludes": {
						"type": "boolean",
						"default": false,
						"markdownDescription": "Specifies whether to ignore file excludes when searching for related files",
						"scope": "window",
						"order": 30
					},
					"findrelated.outputLevel": {
						"type": "string",
						"default": "errors",
						"enum": [
							"silent",
							"errors",
							"verbose",
							"debug"
						],
						"enumDescriptions": [
							"Logs nothing",
							"Logs only errors",
							"Logs all errors, warnings, and messages",
							"Logs all errors, warnings, and messages with extra context useful for debugging"
						],
						"markdownDescription": "Specifies how much (if any) output will be sent to the FindRelated output channel",
						"scope": "window",
						"order": 40
					}
				}
			}
		],
		"commands": [
			{
				"command": "findrelated.show",
				"title": "Show Related Files",
				"category": "Files"
			}
		],
		"keybindings": [
			{
				"command": "findrelated.show",
				"key": "alt+r",
				"when": "editorTextFocus"
			},
			{
				"command": "findrelated.key.left",
				"key": "left",
				"when": "findrelated:key:left"
			},
			{
				"command": "findrelated.key.alt+left",
				"key": "alt+left",
				"when": "findrelated:key:alt+left"
			},
			{
				"command": "findrelated.key.ctrl+left",
				"key": "ctrl+left",
				"mac": "cmd+left",
				"when": "findrelated:key:ctrl+left"
			},
			{
				"command": "findrelated.key.right",
				"key": "right",
				"when": "findrelated:key:right"
			},
			{
				"command": "findrelated.key.alt+right",
				"key": "alt+right",
				"when": "findrelated:key:alt+right"
			},
			{
				"command": "findrelated.key.ctrl+right",
				"key": "ctrl+right",
				"mac": "cmd+right",
				"when": "findrelated:key:ctrl+right"
			},
			{
				"command": "findrelated.key.alt+enter",
				"key": "alt+enter",
				"when": "findrelated:key:alt+enter"
			},
			{
				"command": "findrelated.key.ctrl+enter",
				"key": "ctrl+enter",
				"when": "findrelated:key:ctrl+enter"
			},
			{
				"command": "findrelated.key.escape",
				"key": "escape",
				"when": "findrelated:key:escape && editorTextFocus && !findWidgetVisible && !quickFixWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"
			}
		]
	},
	"scripts": {
		"analyze:bundle": "webpack --mode production --env analyzeBundle",
		"analyze:deps": "webpack --env analyzeDeps",
		"build": "webpack --mode development",
		"bundle": "webpack --mode production",
		"clean": "npx rimraf dist out .vscode-test .vscode-test-web .eslintcache* tsconfig*.tsbuildinfo",
		"lint": "eslint \"src/**/*.ts?(x)\" --fix",
		"package": "vsce package --yarn",
		"package-pre": "yarn run patch-pre && yarn run package --pre-release",
		"patch-pre": "node ./scripts/applyPreReleasePatch.js",
		"pretty": "prettier --config .prettierrc --loglevel warn --write .",
		"pub": "vsce publish --yarn",
		"pub-pre": "vsce publish --yarn --pre-release",
		"rebuild": "yarn run reset && yarn run build",
		"reset": "yarn run clean && yarn --frozen-lockfile",
		"watch": "webpack --watch --mode development",
		"web": "vscode-test-web --extensionDevelopmentPath=. --folder-uri=vscode-vfs://github/eamodio/vscode-find-related",
		"web:serve": "npx serve --cors -l 5000",
		"web:tunnel": "npx localtunnel -p 5000",
		"update-dts": "pushd \"src/@types\" && npx vscode-dts dev && popd",
		"update-dts:master": "pushd \"src/@types\" && npx vscode-dts master && popd",
		"vscode:prepublish": "yarn run bundle"
	},
	"dependencies": {
		"os-browserify": "0.3.0",
		"path-browserify": "1.0.1"
	},
	"devDependencies": {
		"@types/node": "16.11.47",
		"@types/vscode": "1.72.0",
		"@typescript-eslint/eslint-plugin": "5.54.0",
		"@typescript-eslint/parser": "5.54.0",
		"@vscode/vsce": "2.18.0",
		"circular-dependency-plugin": "5.2.2",
		"clean-webpack-plugin": "4.0.0",
		"esbuild": "0.17.10",
		"esbuild-loader": "3.0.1",
		"eslint": "8.35.0",
		"eslint-cli": "1.1.1",
		"eslint-config-prettier": "8.6.0",
		"eslint-import-resolver-typescript": "3.5.3",
		"eslint-plugin-anti-trojan-source": "1.1.1",
		"eslint-plugin-import": "2.27.5",
		"fork-ts-checker-webpack-plugin": "6.5.2",
		"prettier": "2.8.4",
		"terser-webpack-plugin": "5.3.6",
		"ts-loader": "9.4.2",
		"typescript": "4.9.5",
		"webpack": "5.75.0",
		"webpack-bundle-analyzer": "4.8.0",
		"webpack-cli": "5.0.1"
	}
}
